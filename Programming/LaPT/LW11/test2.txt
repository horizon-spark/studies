C++ is a general-purpose programming language and is widely used nowadays for competitive 
programming. It has imperative, object-oriented, and generic programming features. C++ runs on lots of 
platforms like Windows, Linux, Unix, Mac, etc. 
Before explaining the basics of C++, we would like to clarify two more ideas: low-level and high-level. To 
make it easy to understand, let’s consider this scenario – when we go to the Google search engine and 
search for some queries, Google displays some websites according to our question. Google does this for us 
at a very high level. We don’t know what’s happening at the low level until we look into Google servers (at 
a low level) and further to the level where the data is in the form of 0s/1s. The point we want to make here 
is that a low level means nearest to the hardware, and a high level means farther from the hardware with a 
lot of layers of abstraction. C++ is considered a low-level language as it is closer to hardware than most 
general-purpose programming languages. However to become proficient in any programming language, 
one Firstly needs to understand the basics of that language. 
Basics of C++ Programming 
Basic Syntax and First Program in C++ 
Learning C++ programming can be simplified into writing your program in a text editor and saving it with 
the correct extension(.CPP, C, CP), and compiling your program using a compiler or online IDE. The “Hello 
World” program is the first step toward learning any programming language and is also one of the simplest 
programs you will learn. 
We can learn more about C++ Basic Syntax here – C++ Basic Syntax 
Basic Input and Output in C++ 
C++ comes with libraries that provide us with many ways for performing input and output. In C++ input and 
output are performed in the form of a sequence of bytes or more commonly known as streams. The two 
methods cin and cout are used very often for taking inputs and printing outputs respectively. These two are 
the most basic methods of taking input and output in C++. 
To learn more about basic input and output in C++, refer to this article – Basic Input/Output in C++ 
Comments in C++ 
A well-documented program is a good practice for a programmer. It makes a program more readable and 
error finding becomes easier. One important part of good documentation is Comments. In computer 
programming, a comment is a programmer-readable explanation or annotation in the source code of a 
computer program. These are statements that are not executed by the compiler and interpreter. 
We can learn more about C++ comments in this article – C++ Comments
All variables use data type during declaration to restrict the type of data to be stored. Therefore, we can
say that data types are used to tell the variables the type of data they can store. 
#
Most frequent words: the,and,C++
+------------------------------------------+
| String number | Word 1 | Word 2 | Word 3 | 
|		1		|	0	 |	  1	  |	  1    |
|		2		|	0	 |	  1	  |	  1    |
|		3		|	0	 |	  0	  |	  0    |
|		4		|	1	 |	  1	  |	  1    |
|		5		|	1	 |	  1	  |	  0    |
|		6		|	0	 |	  0	  |	  0    |
|		7		|	1	 |	  0	  |	  0    |
|		8		|	4	 |	  1	  |	  0    |
|		9		|	2	 |	  1	  |	  0    |
|		10		|	0	 |	  0	  |	  1    |
|		11		|	0	 |	  0	  |	  0    |
|		12		|	1	 |	  0	  |	  0    |
|		13		|	0	 |	  0	  |	  1    |
|		14		|	0	 |	  1	  |	  1    |
|		15		|	0	 |	  1	  |	  1    |
|		16		|	2	 |	  1	  |	  0    |
|		17		|	2	 |	  1	  |	  0    |
|		18		|	0	 |	  0	  |	  0    |
|		19		|	0	 |	  0	  |	  2    |
|		20		|	0	 |	  1	  |	  1    |
|		21		|	0	 |	  2	  |	  2    |
|		22		|	2	 |	  0	  |	  0    |
|		23		|	0	 |	  2	  |	  0    |
|		24		|	1	 |	  1	  |	  1    |
|		25		|	0	 |	  1	  |	  2    |
|		26		|	0	 |	  0	  |	  1    |
|		27		|	0	 |	  1	  |	  0    |
|		28		|	0	 |	  0	  |	  0    |
|		29		|	1	 |	  0	  |	  0    |
|		30		|	1	 |	  1	  |	  0    |
|		31		|	0	 |	  0	  |	  2    |
|		32		|	1	 |	  0	  |	  0    |
|		33		|	2	 |	  0	  |	  0    |
+------------------------------------------+
